name: build-test
run-name: Build and Test by @${{github.actor}}

on:
  pull_request:
    types:
      - synchronize
      - ready_for_review
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - uses: actions/checkout@v4
        name: Checkout
      - uses: actions/setup-go@v5.5.0
      - name: build
        shell: bash
        run: |
          go build -o service-dependency-api cmd/service-dependency-api/main.go
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: actions/setup-go@v5.5.0
      - name: run tests
        shell: bash
        run: |
          go test -v ./api/... ./repositories/... ./internal/... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

      - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: coverage.out

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
          HEAD_REF: ${{ github.head_ref }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge." || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ env.HEAD_REF }}
